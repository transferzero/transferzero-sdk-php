<?php
/**
 * PayinMethodState
 *
 * PHP version 5
 *
 * @category Class
 * @package  TransferZero
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * TransferZero API
 *
 * Reference documentation for the TransferZero API V1
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.1.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace TransferZero\Model;
use \TransferZero\ObjectSerializer;

/**
 * PayinMethodState Class Doc Comment
 *
 * @category Class
 * @description The state of the payin method, which can be one of the following:  * &#x60;incomplete&#x60;: Some fields need to be filled in in_details before we can initiate the collection request. * &#x60;initial&#x60;: All required fields in in_details are present and collection process with the sender will start. * &#x60;pending&#x60;: Collection process has been started, waiting for sender to send funds. * &#x60;success&#x60;: Collection succeeded and funds have been cleared. * &#x60;processing&#x60;: Collection succeeded but waiting for funds to fully clear. * &#x60;error&#x60;: Collection failed. No funds received from sender. You can update or retry the PayinMethod. * &#x60;mispaid&#x60;: Collection succeeded but sender sent the wrong amount. * &#x60;canceled&#x60;: The transaction has been canceled and we will refund the sender soon. * &#x60;refunded&#x60;: The sender has been refunded the amount they sent in. * &#x60;exception&#x60;: An exception happened during processing of the collection. Please contact support.
 * @package  TransferZero
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PayinMethodState
{
    /**
     * Possible values of this enum
     */
    const INCOMPLETE = 'incomplete';
    const INITIAL = 'initial';
    const PENDING = 'pending';
    const SUCCESS = 'success';
    const PROCESSING = 'processing';
    const ERROR = 'error';
    const MISPAID = 'mispaid';
    const CANCELED = 'canceled';
    const REFUNDED = 'refunded';
    const EXCEPTION = 'exception';
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::INCOMPLETE,
            self::INITIAL,
            self::PENDING,
            self::SUCCESS,
            self::PROCESSING,
            self::ERROR,
            self::MISPAID,
            self::CANCELED,
            self::REFUNDED,
            self::EXCEPTION,
        ];
    }
}


